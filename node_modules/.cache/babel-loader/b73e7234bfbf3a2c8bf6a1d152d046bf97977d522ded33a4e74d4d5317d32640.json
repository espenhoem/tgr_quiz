{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer(_ref) {\n  _s();\n  let {\n    play,\n    lost,\n    setGameStarted,\n    setStop,\n    seconds,\n    setSeconds,\n    milliseconds,\n    setMilliseconds\n  } = _ref;\n  useEffect(() => {\n    if (seconds === 0 && milliseconds === 0) {\n      play(lost);\n      setGameStarted(false);\n      return setStop(true);\n    }\n    if (milliseconds === 0) {\n      setSeconds(prev => prev - 1);\n      setMilliseconds(10);\n    }\n    interval();\n    //cleanup\n    return () => {\n      clearInterval(id.current);\n    };\n  }, [milliseconds, seconds]);\n  let id = useRef();\n\n  //interval\n\n  function interval() {\n    id.current = setInterval(() => {\n      setMilliseconds(prev => prev - 1);\n    }, 100);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [seconds >= 10 ? seconds : '0' + seconds, \":\", milliseconds === 10 ? (milliseconds + '0').substring(1, 3) : '0' + milliseconds]\n  }, void 0, true);\n}\n_s(Timer, \"8jMXln6UxQlCKJDU2IqCI6lWtGE=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useRef","Timer","play","lost","setGameStarted","setStop","seconds","setSeconds","milliseconds","setMilliseconds","prev","interval","clearInterval","id","current","setInterval","substring"],"sources":["/Users/espen.hoem/Desktop/tgr_quiz/tgr_quiz/src/components/Timer.js"],"sourcesContent":["import { useEffect, useRef } from \"react\"\n\nexport default function Timer({play, lost, setGameStarted, setStop, seconds, setSeconds, milliseconds, setMilliseconds}) {\n\n\n\n\nuseEffect(() => { \n\n\n  if(seconds === 0 && milliseconds === 0) \n  \n  {\n\n    play(lost);\n    setGameStarted(false);\n\n\n  \n  return setStop(true);\n\n\n  }\n\n  if(milliseconds === 0) {\n    \n    setSeconds(prev => prev - 1);\n    setMilliseconds(10);\n\n  }\n\n  interval();\n  //cleanup\n  return () => {\n    clearInterval(id.current);\n  }\n\n  }, [milliseconds, seconds])\n\n  let id = useRef();\n\n      //interval\n\n      function interval() {\n      id.current = setInterval(() => {\n          setMilliseconds(prev => prev - 1);\n        }, 100);\n      }\n\nreturn (\n\n<>\n{(seconds >= 10) ? seconds : '0' + seconds}:{(milliseconds === 10) ? (milliseconds + '0').substring(1,3) : '0' + milliseconds}\n</>\n\n)\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA;AAAA;AAEzC,eAAe,SAASC,KAAK,OAA4F;EAAA;EAAA,IAA3F;IAACC,IAAI;IAAEC,IAAI;IAAEC,cAAc;IAAEC,OAAO;IAAEC,OAAO;IAAEC,UAAU;IAAEC,YAAY;IAAEC;EAAe,CAAC;EAKvHV,SAAS,CAAC,MAAM;IAGd,IAAGO,OAAO,KAAK,CAAC,IAAIE,YAAY,KAAK,CAAC,EAEtC;MAEEN,IAAI,CAACC,IAAI,CAAC;MACVC,cAAc,CAAC,KAAK,CAAC;MAIvB,OAAOC,OAAO,CAAC,IAAI,CAAC;IAGpB;IAEA,IAAGG,YAAY,KAAK,CAAC,EAAE;MAErBD,UAAU,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC5BD,eAAe,CAAC,EAAE,CAAC;IAErB;IAEAE,QAAQ,EAAE;IACV;IACA,OAAO,MAAM;MACXC,aAAa,CAACC,EAAE,CAACC,OAAO,CAAC;IAC3B,CAAC;EAED,CAAC,EAAE,CAACN,YAAY,EAAEF,OAAO,CAAC,CAAC;EAE3B,IAAIO,EAAE,GAAGb,MAAM,EAAE;;EAEb;;EAEA,SAASW,QAAQ,GAAG;IACpBE,EAAE,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;MAC3BN,eAAe,CAACC,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IACnC,CAAC,EAAE,GAAG,CAAC;EACT;EAEN,oBAEA;IAAA,WACEJ,OAAO,IAAI,EAAE,GAAIA,OAAO,GAAG,GAAG,GAAGA,OAAO,EAAC,GAAC,EAAEE,YAAY,KAAK,EAAE,GAAI,CAACA,YAAY,GAAG,GAAG,EAAEQ,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,GAAG,GAAGR,YAAY;EAAA,gBAC1H;AAIH;AAAC,GAvDuBP,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}